---
title: "Quantile Regression"
author: "Chris Cioffi, Kristina Frazier, Aidan Hennessy, Mike McHenry"
format: revealjs
editor: visual
---

## Quantile Regression

-   A useful alternative to Ordinary Least Squares (OLS).

-   Produces estimated regression coefficients for specific quantiles of the response variable.

    -   As a result, the coefficients will change as the specified quantile of the response variable changes.

## Sample Density

```{r}
# Load libraries
library(tidyverse)
library(quantreg)

set.seed(17)
# Generate random normal data
df_rnd <- as.tibble(rnorm(10000))

df_rnd |>
  ggplot(aes(value)) +
  geom_density() +
  geom_vline(xintercept = quantile(df_rnd$value, prob = 0.25), color = "red") +
  geom_vline(xintercept = quantile(df_rnd$value, prob = 0.50), color = "black") +
  geom_vline(xintercept = quantile(df_rnd$value, prob = 0.99), color = "blue") +
  labs(title = "Sample Density Plot",
       x = "",
       y = "") +
  theme_bw()
```

## Example of Linear and Quantile Trend Lines

```{r}
set.seed(16)
eps <- rnorm(100,0,2)
df_trends <- tibble(x = rnorm(100), y = 1.5*x + eps)

df_trends |>
  ggplot(aes(x, y)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  stat_quantile(quantiles = 0.15, color = "red", linetype = "dashed") +
  stat_quantile(quantiles = 0.85, color = "red", linetype = "dashed") +
  annotate(geom="text", x=2.1, y=2.5, label="Linear\nregression", color = "blue", size = 3.5) +
  annotate(geom="text", x=2.1, y=7, label="Quantile\nregression\nat 0.85", color = "red", size = 3.5) +
  annotate(geom="text", x=2.1, y=-1, label="Quantile\nregression\n at 0.15", color = "red", size = 3.5) +
  theme_bw()
```

## Why Use Quantile Regression?

-   The relationship between the predictor and response variables may vary across the distribution, making it useful to allow the estimates to change.

-   More robust to outliers.

-   If OLS assumptions are violated.

    -   Nonconstant variance, nonnormality, indpendence, nonlinearity.

## General Form of the Model

-   $Q_\tau(Y) = \beta_0(\tau) + \beta_1(\tau)X_1 + ... + \beta_p(\tau)X_p$

-   Where $\tau$ is a specific quantile value.

-   The objective of quantile regression is to minimize the median absolute deviations (Quantile Loss).

-   Rather than minimizing the sum of squares in OLS.

## Model Assumptions

-   Large sample size.

-   Response variable is continuous.

-   No strict distribution to adhere to.

## Quantreg

-   While the lm() function allows us to use linear regression and estimate the conditional mean of the response, considering explanatory variable values, quantreg can be used to easily conduct quantile regresion in R.

## Quantreg and WHO data

-   Demo: estimate the conditional quantiles, considering the predictors, and here we can use quantreg to compare world nations' life expectancies to its so-called income index.

-   The dataset is maintained by the World Health Organization and looks at a variety of public health and income factors for world nations. We're using a Kaggle version, which can be easily downloaded following this link: https://gist.github.com/aishwarya8615/89d9f36fc014dea62487f7347864d16a

-   \*Demo adapted from examples found on Medium and R-bloggers

## Quantreg and WHO data

-   After removing nations with incomplete information, we can see a positive relationship between developed countries and higher life expectancy.

```{r}
#import data 
life_exp_narm <- read_csv("Life_Expectancy_Data.csv")
#let's remove all with income index around 0 for the purposes of this exercise.
life_exp_narm <- life_exp_narm |> 
  filter(Income_composition_of_resources>0) 

#summary statistics for the 

#plot the data 
ggplot(life_exp_narm, aes(x=Income_composition_of_resources, 
                          y=Life_expectancy, col=Status)) + geom_point() +
  xlab("Income index") + ylab("Life expectancy")
```

## Quantile regression vs Linear Regression

-   While linear regression can give us the mean value, quantreg can allow us to find any quantile ranging from the 1 percentile to the 99 percentile. We can also easily evaluate the 50% percentile (the median) which can be more resistant to outliers than linear regression's mean.

## Quantile regression vs Linear Regression

```{r}

ggplot(life_exp_narm, aes(x=Income_composition_of_resources, 
                          y=Life_expectancy, col=Status)) + geom_point() +
  geom_smooth(method = lm, se = FALSE, color = "red", size = 1) + # linear model
  geom_quantile(color = "blue", quantiles = 0.5, size=1) + # median quantile regression model with tau = 0.5 -- 50%
  labs(title = "Life expectancy ~ income index - lm mean (red), quantreg median (blue)", y = "Life Expectancy", x = "Income Index")
```

## Quantreg for quantiles

-   In addition to comparing the mean to the median, we can also look at the top and bottom quantiles to compare the confidence intervals for life expectancies.

```{r}

rqfit <- rq(Life_expectancy ~ Income_composition_of_resources, tau = 0.25, data = life_exp_narm)

summary(rqfit)

```

## When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

## References

https://www.voxco.com/blog/quantile-regression/ https://drkebede.medium.com/quantile-regression-tutorial-in-r-f2eec72c132b https://www.r-bloggers.com/2019/01/quantile-regression-in-r-2/
